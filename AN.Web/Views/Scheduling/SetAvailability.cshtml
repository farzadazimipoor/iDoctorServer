
@using AN.Core.Resources.UI.AdminPanel;
@using AN.Core.Resources.Global

@model AN.Web.Models.DoctorAvailabilityModel

@{
    ViewBag.Title = PanelResource.SetDoctorAvailability;
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";

    var status = Model.IsAvailable ? "success" : "danger";
}

@section styles{
    <style type="text/css">
        #pending-appoints-tabl th, td {
            text-align: right;
        }
    </style>
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">@PanelResource.SetDoctorAvailability</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb @(ViewBag.Lang == AN.Core.Enums.Lang.EN ? "float-sm-right" : "float-sm-left") ">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home", new { area = TempData["area"] })">@AN.Core.Resources.Global.Global.Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("SettingDoctor","Polyclinic", new { area = "", polyclinicId = ViewBag.polyclinicId })">@Global.Doctors</a></li>                  
                    <li class="breadcrumb-item active">@PanelResource.SetDoctorAvailability</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="card card-info card-outline">
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-12 text-center">
                        @if (Model.IsAvailable)
                        {
                            <span class="fa-stack fa-4x">
                                <i class="fa fa-circle fa-stack-2x text-olive"></i>
                                <i class="fa fa-check-circle fa-stack-1x fa-inverse"></i>
                            </span>
                            <h3 class="panel-title"> @Model.doctorName</h3>
                            <h4 class="service-heading text-olive">@Global.Active</h4>
                            <p class="text-muted"></p>
                            <hr />
                            if (Model.PendingAppointments.Count() > 0)
                            {
                                <div class="alert alert-danger">
                                    <span class="fa fa-bolt"></span>&nbsp;<strong>Warning! </strong> This doctor have <strong>@Model.PendingAppointments.Count</strong> pending turns
                                </div>

                                <table id="pending-appoints-table" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>@Global.Date</th>
                                            <th>@Global.Name</th>
                                            <th>@Global.Mobile</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{ var counter = 0;}
                                        @foreach (var item in Model.PendingAppointments)
                                        {
                                            counter += 1;
                                            <tr>
                                                <td>@counter</td>
                                                <td>@item.Start_DateTime.ToShortDateString()</td>
                                                <td>@item.Person.FullName</td>
                                                <td>@item.Person.Mobile</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <form method="post" action="@Url.Action("SetAvailability", "Scheduling", new { area = "" })" role="form">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.ServiceSupplyId)
                                    @Html.HiddenFor(m => m.doctorName)
                                    @Html.HiddenFor(m => m.IsAvailable)
                                    <input type="hidden" value="true" name="CancelAllAppointments" />
                                    <button type="submit" class="btn btn-danger">@PanelResource.CancellAllAndDisableDoctor</button>
                                </form>
                                <br />
                                <form method="post" action="@Url.Action("SetAvailability", "Scheduling", new { area = "" })" role="form">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.ServiceSupplyId)
                                    @Html.HiddenFor(m => m.doctorName)
                                    @Html.HiddenFor(m => m.IsAvailable)
                                    <input type="hidden" value="false" name="CancelAllAppointments" />
                                    <button type="submit" class="btn btn-warning">@PanelResource.OnlyDisableDoctor</button>
                                </form>

                            }
                            else
                            {
                                <form method="post" action="@Url.Action("SetAvailability", "Scheduling", new { area = "" })" role="form">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.ServiceSupplyId)
                                    @Html.HiddenFor(m => m.doctorName)
                                    @Html.HiddenFor(m => m.IsAvailable)
                                    <button type="submit" class="btn btn-danger">@Global.Disabling</button>
                                </form>
                            }
                        }
                        else
                        {
                            <span class="fa-stack fa-4x">
                                <i class="fa fa-circle fa-stack-2x text-danger"></i>
                                <i class="fa fa-ban fa-stack-1x fa-inverse"></i>
                            </span>
                            <h3 class="panel-title"> @Model.doctorName</h3>
                            <h4 class="service-heading text-danger">@Global.InActive</h4>
                            <p class="text-muted"></p>
                            <hr />
                            <form method="post" action="@Url.Action("SetAvailability", "Scheduling", new { area = "" })" role="form">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(m => m.ServiceSupplyId)
                                @Html.HiddenFor(m => m.doctorName)
                                @Html.HiddenFor(m => m.IsAvailable)
                                <button type="submit" class="btn btn-success">@Global.Enabling</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>   
</div>
