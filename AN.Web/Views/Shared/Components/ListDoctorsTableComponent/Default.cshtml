@using AN.Core.Resources.UI.AdminPanel;
@using AN.Core.Resources.Global

@model IEnumerable<AN.Web.Models.SettingDoctorViewModel>

@{
    var dir = AN.Web.Helper.CultureHelper.Lang == AN.Core.Enums.Lang.EN ? AN.Core.Enums.LayoutDir.LTR : AN.Core.Enums.LayoutDir.RTL;
    var specialities = string.Empty;
}

<div class="table-responsive">
    <table class="table table-striped" style="width: 100%;">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.DoctorName)</th>
                <th>@Html.DisplayNameFor(model => model.MedicalCouncilNumber)</th>
                <th>@Html.DisplayNameFor(model => model.ReservationTypeString)</th>
                <th>@PanelResource.Scheduling</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                specialities = string.Empty;
                if (item.Specialities != null && item.Specialities.Any())
                {
                    foreach (var expertise in item.Specialities)
                    {
                        specialities += "<strong>" + expertise + "</strong>" + "<br />";
                    }
                }
                else
                {
                    specialities = "<span class='txtdanger'></span>";
                }

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.DoctorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MedicalCouncilNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReservationTypeString)
                    </td>
                    <td>
                        @{
                            var scheduleIcon = item.IsAvailable ? "fa fa-check" : "fa fa-ban";
                            var scheduleClass = item.IsAvailable ? "success" : "danger";
                            var scheduleTitle = item.IsAvailable ? Global.Active : Global.InActive;
                        }
                        <div class="btn-group">
                            <a href="@Url.Action("Index","Scheduling",new { area = "", serviceSupplyId = item.ServiceSupplyId  })" class="btn btn-warning btn-sm"><i class="fa fa-clock"></i> @PanelResource.Scheduling</a>
                            <a href="@Url.Action("SetAvailability","Scheduling",new { area = "" , id = item.ServiceSupplyId  })" class="btn btn-@scheduleClass btn-sm"><i class="@scheduleIcon"></i> @scheduleTitle</a>
                        </div>
                    </td>
                    <td>
                        <div class="btn-group">
                            <button type="button"
                                    class="btn btn-outline-secondary btn-sm"
                                    onclick="setScientificGrades('@item.PolyclinicId', '@item.ServiceSupplyId')" title="Grades">
                                <i class="fa fa-id-card"></i>
                            </button>
                            <a href="@Url.Action("Index", "Speciality", new { area = "", polyclinicId = item.PolyclinicId, doctorId = item.ServiceSupplyId })"
                               id="expertisePopoverData"
                               data-container="body"
                               data-content="@specialities"
                               rel="popover"
                               data-placement="right"
                               data-original-title="@PanelResource.Expertises"
                               data-trigger="hover"
                               class="btn btn-sm btn-outline-secondary popoverData" title="Specialities"><i class="fa fa-briefcase"></i>&nbsp;<span class="badge">@(item.Specialities.Count)</span></a>
                            <a href="@Url.Action("EditPolyclinicDoctor", "Polyclinic", new { area = "" , serviceSupplyId = item.ServiceSupplyId })" class="btn btn-sm btn-outline-secondary" title="Edit"><i class="fa fa-edit"></i></a>
                            <button type="button"
                                    class="btn btn-outline-secondary btn-sm"
                                    onclick="getDetails('@item.ServiceSupplyId')" title="View">
                                <i class="fa fa-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger"
                                    type="button"
                                    onclick="removeShiftCenterDoctor('@item.PolyclinicId', '@item.ServiceSupplyId')" title="Delete">
                                <i class="fa fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function removeShiftCenterDoctor(centerId, serviceSupplyId) {
        Swal.fire({
                title: "@AN.Core.Resources.Global.Global.Msg_AreYouSure",
                text: "@Html.Raw(AN.Core.Resources.EntitiesResources.Messages.WontAbleRevertThis)",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@AN.Core.Resources.Global.Global.Yes',
                cancelButtonText: '@AN.Core.Resources.Global.Global.No',
            }).then((result) => {
                if (result.value) {
                    waiting('body', '@AN.Core.Resources.Global.Global.PleaseWait');
                    $.ajax({
                        method: "POST",
                        url: "/Polyclinic/DeletePolyclinicDoctor",
                        data: { polyclinicId: centerId, serviceSupplyId: serviceSupplyId }, success: function (response) {
                            if (response.success) {
                                Swal.fire('@AN.Core.Resources.Global.Global.SystemMessage',response.message,'success')
                             } else {
                                Swal.fire({ type: 'error', title: '@AN.Core.Resources.Global.Global.SystemMessage', text: response.message })
                             }
                        }, error: function (jqXHR, ex) {
                            handleAjaxError(jqXHR, ex);
                        }
                    }).always(function () {
                        waitingDone('body');
                    });
                }
            });
    }

    function setScientificGrades(centerId, serviceSupplyId) {
        var title = '@Html.Raw(AN.Core.Resources.UI.AdminPanel.PanelResource.ScientificGrade)';
        waiting('body', '@AN.Core.Resources.Global.Global.PleaseWait');
        $.ajax({
            type: 'Get',
            url: "/Speciality/SetScientificGrade?polyclinicId=" + centerId + "&doctorId=" + serviceSupplyId,
            success: function (response) {
                var commonModal = $("#AwroNoreModal");
                commonModal.find('#AwroNoreModalDialog').addClass("modal-lg");
                commonModal.find('.modal-title').text(title);
                commonModal.find('#CommonModalContent').html(response);
                commonModal.modal({backdrop: 'static', keyboard: false});
                $(".select2").select2({
                   width: '100%',
                   dir: '@(dir.ToString().ToLower())'
                });
            },
            error: function (jqXHR, ex) {
                handleAjaxError(jqXHR, ex);
            }
        }).always(function () {
            waitingDone('body');
        });
    }
</script>
