@using AN.Core.Resources.UI.AdminPanel;
@using AN.Core.Resources.Global

@model AN.Web.Models.SettingDoctorViewModel

@{
    var area = (string)TempData["area"];
    ViewBag.Title = area == "POLYCLINICMANAGER" ? PanelResource.PolyclinicDoctors : Global.Managers;
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";
    var dir = AN.Web.Helper.CultureHelper.Lang == Lang.EN ? "ltr" : "rtl";
}

@section styles{
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/lib/flatpickr/flatpickr.min.css" />
    <style>
        .number-center {
            direction: ltr;
            text-align: center;
        }

        .start-point-input {
            max-width: 50px;
        }

        .point-info {
            display: none;
        }
    </style>
}

<partial name="_ConfirmDeleteModalPartial" />

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">@ViewBag.Title</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb @(ViewBag.Lang == AN.Core.Enums.Lang.EN ? "float-sm-right" : "float-sm-left") ">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home", new { area = area })">@AN.Core.Resources.Global.Global.Home</a></li>
                    @if (area != "POLYCLINICMANAGER")
                    {
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Polyclinic", new { area = "" })">@PanelResource.PolyclinicsList</a></li>
                    }
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="card card-body">
            @using (Html.BeginForm("AssignNewDoctor", "Polyclinic", new { area = "", polyclinicId = Model.PolyclinicId }, FormMethod.Post, true, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-9">
                        <div class="form-group">
                            @Html.LabelFor(m => m.UserDoctorId)
                            @Html.DropDownListFor(model => model.UserDoctorId, Model.ListDoctors, new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(m => m.UserDoctorId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.MedicalCouncilNumber)
                            @Html.TextBoxFor(m => m.MedicalCouncilNumber, new { maxlength = "10", @class = "form-control number-center NumericOnly", @id = "supply-duration" })
                            @Html.ValidationMessageFor(m => m.MedicalCouncilNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Duration)
                                @Html.TextBoxFor(m => m.Duration, new { maxlength = "3", @class = "form-control number-center NumericOnly", @id = "supply-duration" })
                                @Html.ValidationMessageFor(m => m.Duration, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReservationType, new { @for = "reservation-type" })
                            @Html.DropDownListFor(m => m.ReservationType, new List<SelectListItem> { new SelectListItem { Value = "1", Text = Global.Selective }, new SelectListItem { Value = "0", Text = Global.Sequentially } }, new { @class = "form-control", @id = "reservation-type" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OnlineReservationPercent, new { @for = "reserve-percent" })
                            @Html.TextBoxFor(m => m.OnlineReservationPercent, new { maxlength = "3", min = "0", max = "100", @class = "form-control number-center NumericOnly", @id = "reserve-percent" })
                            @Html.ValidationMessageFor(m => m.OnlineReservationPercent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.StartReservationDate)
                            @Html.TextBoxFor(m => m.StartReservationDate, new { @class = "form-control common-datepicker", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.StartReservationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Phone)
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control number-center NumericOnly" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @*<div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(m => m.VisitPrice)
                                @Html.TextBoxFor(m => m.VisitPrice, new { maxlength = "10", @class = "form-control number-center NumericOnly", @id = "visit-price" })
                                @Html.ValidationMessageFor(m => m.VisitPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(m => m.PrePaymentPercent)
                                @Html.TextBoxFor(m => m.PrePaymentPercent, new { maxlength = "10", @class = "form-control number-center NumericOnly", @id = "prepayment" })
                                @Html.ValidationMessageFor(m => m.PrePaymentPercent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(m => m.PaymentType)
                                @Html.DropDownListFor(m => m.PaymentType, new List<SelectListItem> { new SelectListItem { Value = "0", Text = Global.Free }, new SelectListItem { Value = "1", Text = Global.PrePayment } }, new { @class = "form-control", @id = "payment-type" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.RankScore)
                                @Html.TextBoxFor(m => m.RankScore, new { maxlength = "10", @class = "form-control number-center NumericOnly", @id = "rankscore" })
                                @Html.ValidationMessageFor(m => m.RankScore, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                <div class="row mt-3">
                    <div class="col-md-12">
                        <div class="form-group">
                            <strong>@PanelResource.ReservationLimitationForDays:</strong>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ListReservationStartPoints)
                            @Html.DropDownListFor(model => model.StartPoint, Model.ListReservationStartPoints, new { @class = "form-control", @id = "liststartpoints" })
                            <div class="point-info alert alert-info mt-2" id="start-point-info">
                                @PanelResource.StartReservation
                                @Html.TextBoxFor(m => m.StartPointNumber, new { maxlength = "2", @class = "number-center NumericOnly start-point-input", @id = "start-point-number" })
                                @Html.DropDownListFor(m => m.StartPointUnit, new List<SelectListItem> { new SelectListItem { Value = "0", Text = Global.Minute }, new SelectListItem { Value = "1", Text = Global.Hour }, new SelectListItem { Value = "2", Text = Global.Day } }, new { @id = "start-point-unit" })
                                @PanelResource.BeforeStartVisit
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ListReservationEndPoints, new { @for = "listendpoints" })
                            @Html.DropDownListFor(model => model.EndPoint, Model.ListReservationEndPoints, new { @class = "form-control", @id = "listendpoints" })
                            <div class="point-info alert alert-info mt-2" id="end-point-info">
                                @PanelResource.EndReservation
                                @Html.TextBoxFor(m => m.EndPointNumber, new { maxlength = "2", @class = "number-center NumericOnly start-point-input", @id = "end-point-number" })
                                @Html.DropDownListFor(m => m.EndPointUnit, new List<SelectListItem> { new SelectListItem { Value = "0", Text = Global.Minute }, new SelectListItem { Value = "1", Text = Global.Hour } }, new { @id = "end-point-unit" })
                                @Html.DropDownListFor(m => m.EndPointPosition, new List<SelectListItem> { new SelectListItem { Value = "0", Text = Global.Before }, new SelectListItem { Value = "1", Text = Global.After } }, new { @id = "end-point-position" })
                                @PanelResource.StartVisit
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Bio)
                            @Html.TextAreaFor(m => m.Bio, new { maxlength = "1000", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Bio_Ku)
                            @Html.TextAreaFor(m => m.Bio_Ku, new { maxlength = "1000", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Bio_Ku, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Bio_Ar)
                            @Html.TextAreaFor(m => m.Bio_Ar, new { maxlength = "1000", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Bio_Ar, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row mt-5">
                    <div class="col-md-12 text-center">
                        <button type="submit" class="btn btn-info"><i class="fa fa-arrow-down"></i>  @Global.Save</button>
                    </div>
                </div>
            }
        </div>
        <div class="card card-info card-outline">
            <div class="card-header">
                <h5 class="m-0">@PanelResource.CurrentDoctors</h5>
            </div>
            <div class="card-body p-0">
                @await Component.InvokeAsync("ListDoctorsTableComponent", new { polyclinicId = Model.PolyclinicId })
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript" src="~/lib/select2/js/select2.min.js"></script>
    <script type="text/javascript" src="~/js/jquery.maskedinput.min.js"></script>
    <script type="text/javascript" src="~/lib/flatpickr/flatpickr.min.js"></script>
    <script type="text/javascript">
        $(".select2").select2({
            width: '100%',
            placeholder: '...',
            dir: "@dir",
            allowClear: false
        });
        $(".common-datepicker").flatpickr();

        $("#liststartpoints").on('change', function (e) {
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;

            var startPointInfo = $("#start-point-info");

            if (valueSelected == "1") {
                startPointInfo.show(1000);
            } else {
                startPointInfo.hide(1000);
            }
        });

        $("#listendpoints").on('change', function (e) {
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;

            var endPointInfo = $("#end-point-info");

            if (valueSelected == "1") {
                endPointInfo.show(1000);
            } else {
                endPointInfo.hide(1000);
            }
        });

         function getDetails(id) {
            waiting('body', '@AN.Core.Resources.Global.Global.PleaseWait');
            $.ajax({
                type: 'Get',
                url: "/Polyclinic/SericeSupplyDetails/" + id,
                success: function (response) {
                    var commonModal = $("#AwroNoreModal");
                    commonModal.find('.modal-title').text('@Html.Raw(Global.Details + " " + Global.Doctor)');
                    commonModal.find('.modal-body').html(response);
                    commonModal.modal({backdrop: 'static', keyboard: false});
                },
                error: function (err) {
                    toastr.error(err, '@Html.Raw(Global.SystemMessage)');
                }
            }).always(function () {
                waitingDone('body');
            });
        }
    </script>
}
