@using AN.Core.Resources.UI.AdminPanel;
@using AN.Core.Resources.Global

@model AN.Web.Models.SpecialityViewModel

@{
    ViewBag.Title = PanelResource.DoctorsExpertises;
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";
}

@section styles{
    <link rel="stylesheet" type="text/css" href="~/css/css/select2.css" />
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">@PanelResource.DoctorsExpertises</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb @(ViewBag.Lang == AN.Core.Enums.Lang.EN ? "float-sm-right" : "float-sm-left") ">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home", new { area = TempData["area"] })">@AN.Core.Resources.Global.Global.Home</a></li>
                    <li class="breadcrumb-item"><a href="@("Polyclinic/SettingDoctor?polyclinicId=" + Model.PolyclinicId)">@PanelResource.PolyclinicDoctors</a></li>
                    <li class="breadcrumb-item active">@PanelResource.DoctorsExpertises</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="card card-info card-outline">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-body">
                                @using (Html.BeginForm("AssignSpeciality", "Speciality", new { area = "", doctorId = Model.doctorId }, FormMethod.Post, true, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.PolyclinicId)
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Category)
                                        @Html.DropDownListFor(model => model.categoryId, Model.Categories, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.categoryId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Expertise)
                                        @Html.DropDownListFor(model => model.expertiseId, Model.Expertises, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.expertiseId, "", new { @class = "text-danger" })
                                    </div>                                 
                                    <div class="box-footer text-center">
                                        <button id="btnAssignExpertise" type="submit" class="btn btn-info">@PanelResource.AddNew</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="card ">
                            <div class="card-header">
                                <h5 class="m-0">@PanelResource.DoctorExpertisesList</h5>                               
                            </div>
                            <div class="card-body p-0">
                                @await Component.InvokeAsync("DoctorsSpecialitiesTableComponent", new { doctorId = Model.doctorId })
                            </div>
                        </div>
                    </div>
                </div>
            </div>            
        </div>
    </div>   
</div>

@section scripts{
    <script type="text/javascript" src="~/js/select2.js"></script>
    <script type="text/javascript">
         $(function () {
             $("#categoryId").select2({
                width: '100%',
                placeholder: '@Html.Raw(PanelResource.ExpertiseCategories)',
                dir: "rtl",
                allowClear: true
            });

             $("#expertiseId").select2({
                width: '100%',
                placeholder: '@Html.Raw(PanelResource.Expertises)',
                dir: "rtl",
                allowClear: true
            });
        });

        $("#categoryId").change(function () {
            debugger;
            var categoryId = $("#categoryId").val();

            $("#btnAssignExpertise").prop('disabled', true);
            $("#btnAssignExpertise").html('<i class="fa fa-cog fa-spin fa-3x fa-fw"></i>');

            var dataRow = {
                'categoryId': categoryId
            }
            $.ajax({
                url: '/Speciality/GetSpecialities',
                type: 'GET',
                data: dataRow,
                success: function (result) {
                    $("#expertiseId").html("");
                    $.each($.parseJSON(result), function (i, e) {
                        $("#expertiseId").append($('<option></option>').val(e.id).html(e.name))
                    })
                },
                error: function () {
                    $("#btnAssignExpertise").hide();
                    alert("@Html.Raw(Global.Err_ErrorOccured)")
                },
            }).always(function () {
                   $("#btnAssignExpertise").prop('disabled', false);
                   $("#btnAssignExpertise").text('@Html.Raw(PanelResource.AddNew)');
            });
        });
    </script>
}