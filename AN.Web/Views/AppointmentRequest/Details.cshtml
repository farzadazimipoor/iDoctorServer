@model AN.Core.ViewModels.AppointmentRequestDetailsViewModel

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <div class="form-control bg-gray-light">
                <span class="float-left">Name:</span>
                <span class="float-right"><b>@Model.Patient</b></span>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <div class="form-control bg-gray-light">
                <span class="float-left">Mobile:</span>
                <span class="float-right"><b>@Model.Mobile</b></span>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <div class="form-control bg-gray-light">
                <span class="float-left">Date:</span>
                <span class="float-right"><b>@Model.CreateDate</b></span>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <div class="form-control bg-gray-light" style="min-height: 50px;">
                <b>@Model.Service</b>
            </div>
        </div>
    </div>
    <div class="col-md-12 mt-2">
        <div id="map" style="height: 300px; width: 100% !important;"></div>
    </div>
</div>

<script>
    var map;

    $(function () {
        initMap();
    });

    function initMap() {
        const myLatLng = { lat: @(Model.Ylatitude ?? "0"), lng: @(Model.Xlongitude ?? "0") };

        map = new google.maps.Map(document.getElementById("map"), {
            center: myLatLng,
            zoom: 8,
        });

        if (myLatLng.lat != 0 && myLatLng.lat != "0" && myLatLng.lng != 0 && myLatLng.lng != "0") {
            // Create an info window to share between markers.
            const infoWindow = new google.maps.InfoWindow();

            const marker = new google.maps.Marker({
                position: myLatLng,
                map,
                title: '@Model.Patient',
                label: '@Model.Service',
                optimized: false,
            });

            // Add a click listener for each marker, and set up the info window.
            marker.addListener("click", () => {
                infoWindow.close();
                infoWindow.setContent(marker.getTitle());
                infoWindow.open(marker.getMap(), marker);
            });
        }
    }
</script>

