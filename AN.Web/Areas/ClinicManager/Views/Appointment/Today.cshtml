@using X.PagedList.Mvc.Core; //import this so we get our HTML Helper
@using X.PagedList; //import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)
@using AN.Core;
@using AN.Core.Resources.Global;
@using AN.Core.Resources.UI.AdminPanel;

@model IPagedList<AN.Web.Areas.ClinicManager.Models.CMAppointmentsViewModel>

@{
    ViewBag.Title = PanelResource.TodayTurns;
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";
}

@section styles{
    <link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />
}

<partial name="_ConfirmDeleteModalPartial" />

<section class="content-header">
    <h1>
        @PanelResource.TodayTurns
        <small>@AN.Core.Resources.UI.AdminPanel.PanelResource.AdminPanel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home", new { area = "ClinicManager" })"><i class="fa fa-dashboard"></i> @AN.Core.Resources.Global.Global.Home</a></li>
        <li class="active"> @PanelResource.TodayTurns</li>
    </ol>
</section>

<section class="content">
    <div class="box card">
        <div class="box-body">
            <div class="panel panel-default">
                <div class="panel-body">
                    @using (Html.BeginForm("Today", "Appointment", FormMethod.Get))
                    {
                        <div class="row">
                            <div class="col-md-3">
                                <label for="SearchString">@Global.SearchString</label>
                                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                            </div>
                            <div class="col-md-2">
                                <label>&nbsp;</label>
                                <input type="submit" class="btn btn-primary form-control" value="@Global.Search" />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    @if (Model.Count > 0)
                    {
                        <table id="appointsTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>
                                        @Html.ActionLink(Global.Turn, "Today", new { sortOrder = ViewBag.TurnSortParam, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Patient, "Today", new { sortOrder = ViewBag.PatientNameSortParam, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @AN.Core.Resources.EntitiesResources.User.Mobile
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Service, "Today", new { sortOrder = ViewBag.HealthServiceSortParam, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Doctor, "Today", new { sortOrder = ViewBag.DoctorNameSortParm, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @if (item.Status == AppointmentStatus.Pending)
                                            {
                                                <i class="fa fa-clock-o fa-lg" style="color:#5bc0de;" aria-hidden="true"></i>
                                            }
                                            else if (item.Status == AppointmentStatus.Done)
                                            {
                                                <i class="fa fa-check-circle fa-lg" style="color:green;" aria-hidden="true"></i>
                                            }
                                            else if (item.Status == AppointmentStatus.Canceled)
                                            {
                                                <i class="fa fa-ban fa-lg" style="color:red;" aria-hidden="true"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-ban fa-lg" style="color:red;" aria-hidden="true"></i>
                                            }
                                        </td>
                                        <td>
                                            @item.StartDateTime.ToShortTimeString()
                                        </td>
                                        <td>
                                            @item.PatientName
                                        </td>
                                        <td>
                                            @item.PatientMobile
                                        </td>
                                        <td>
                                            @item.HealthServiceName
                                        </td>
                                        <td>
                                            @item.DoctorName
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @Html.PagedListPager(Model, page => Url.Action("Today", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                        if (Model.PageCount < Model.PageNumber)
                        {
                            <p class="pager-info">@Global.From 0 @Global.Page @Model.PageCount</p>
                        }
                        else
                        {
                            <p class="pager-info">@Global.Page @Model.PageNumber @Global.From @Model.PageCount</p>
                        }
                    }
                    else
                    {
                        @await Html.PartialAsync("_ItemNotFound", "")
                    }
                </div>
            </div>
        </div>
    </div>
</section>
