@using X.PagedList.Mvc.Core; 
@using X.PagedList; 
@using AN.Core;
@using AN.Core.Resources.UI.AdminPanel;
@using AN.Core.Resources.Global;

@model IPagedList<AN.Web.Areas.ClinicManager.Models.CMMessageViewModel>

@{
    ViewBag.Title = PanelResource.AnnouncementsList;
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";
}

@section styles{
    <link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />
}

<partial name="_ConfirmDeleteModalPartial" />

<section class="content-header">
    <h1>
        @PanelResource.AnnouncementsList
        <small>@AN.Core.Resources.UI.AdminPanel.PanelResource.AdminPanel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home", new { area = "ClinicManager" })"><i class="fa fa-dashboard"></i> @AN.Core.Resources.Global.Global.Home</a></li>
        <li class="active"> @PanelResource.AnnouncementsList</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body">
                    @if (Model.Count > 0)
                    {
                        using (Html.BeginForm("Index", "Message", FormMethod.Get))
                        {
                            <p>
                                @Global.Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                                <input type="submit" class="btn btn-primary" value="@Global.SearchString" />
                            </p>
                        }
                        <table id="messagesTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>
                                        @Global.Topic
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Recipient, "Index", new { sortOrder = ViewBag.RecipientNameSortParm, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Mobile, "Index", new { sortOrder = ViewBag.RecipientMobileSortParam, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @Html.ActionLink(Global.Date, "Index", new { sortOrder = ViewBag.SendingDateSortParam, currentFilter = ViewBag.CurrentFilter })
                                    </th>
                                    <th>
                                        @Global.Polyclinic
                                    </th>
                                    <th>
                                        @Global.Doctor
                                    </th>
                                    <th>
                                        @Global.Status
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @switch (item.About)
                                            {
                                                case MessageActionAbout.CancelAppointment:
                                                    <p class="cancel">@Global.CancelTurn</p>
                                                    break;
                                                case MessageActionAbout.MoveAppointment:
                                                    <p>@Global.Move</p>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @item.RecipientName
                                        </td>
                                        <td>
                                            @item.RecipientNumber
                                        </td>
                                        <td>
                                            @item.SendingDate.ToShortDateString()
                                        </td>
                                        <td>
                                            @item.PolyclinicName
                                        </td>
                                        <td>
                                            @item.DoctorName
                                        </td>
                                        <td>
                                            Unknown
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                        if (Model.PageCount < Model.PageNumber)
                        {
                            <p class="pager-info">@Global.Page 0 @Global.From @Model.PageCount</p>
                        }
                        else
                        {
                            <p class="pager-info">@Global.Page @Model.PageNumber @Global.From @Model.PageCount</p>
                        }
                    }
                    else
                    {
                        @await Html.PartialAsync("_ItemNotFound", "")
                    }
                </div>
            </div>
        </div>
    </div>
</section>
