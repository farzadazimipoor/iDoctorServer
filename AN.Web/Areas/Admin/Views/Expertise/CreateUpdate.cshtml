@model AN.Core.ViewModels.ExpertiseCreateUpdateViewModel

<div id="CreateExpertiseArea">
    @using (Html.BeginForm("CreateUpdate", "Expertise", new { area = "Admin" }, FormMethod.Post, true, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.HiddenFor(m => m.Id)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.CategoryId)
                    @Html.DropDownListFor(m => m.CategoryId, ViewBag.ExpertiseCategories as IEnumerable<SelectListItem>, new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { maxlength = "50", @class = "form-control", placeholder = Html.DisplayNameFor(m => m.Name) })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Name_Ku, new { maxlength = "50", @class = "form-control", placeholder = Html.DisplayNameFor(m => m.Name_Ku) })
                    @Html.ValidationMessageFor(m => m.Name_Ku, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Name_Ar, new { maxlength = "50", @class = "form-control", placeholder = Html.DisplayNameFor(m => m.Name_Ar) })
                    @Html.ValidationMessageFor(m => m.Name_Ar, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = 1, maxlength = "500", placeholder = Html.DisplayNameFor(m => m.Description) })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextAreaFor(m => m.Description_Ku, new { @class = "form-control", @rows = 1, maxlength = "500", placeholder = Html.DisplayNameFor(m => m.Description_Ku) })
                    @Html.ValidationMessageFor(m => m.Description_Ku, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextAreaFor(m => m.Description_Ar, new { @class = "form-control", @rows = 1, maxlength = "500", placeholder = Html.DisplayNameFor(m => m.Description_Ar) })
                    @Html.ValidationMessageFor(m => m.Description_Ar, "", new { @class = "text-danger" })
                </div>
                <div class="text-center">
                    <div class="row">
                        <div class="col-md-12 mt-5 text-center">
                            <button type="submit" class="btn btn-info">@(Model.Id == null ? AN.Core.Resources.UI.AdminPanel.PanelResource.AddNew : AN.Core.Resources.Global.Global.Update)</button>
                            <button id="CancelAddExpertise" type="button" class="btn btn-danger" data-dismiss="modal">@AN.Core.Resources.Global.Global.Cancel </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $(function () {
        var form = $("#CreateExpertiseArea").find('form');
        $.validator.unobtrusive.parse(form);
        $(form).on("submit", function (e) {
            e.preventDefault();
            if (form.valid()) {
                var data = new FormData($(this)[0]);
                waiting('AwroNoreModalDialog', '@AN.Core.Resources.Global.Global.PleaseWait');
                $.ajax({
                    method: "POST",
                    url: $(this).attr("action"),
                    dataType: "json",
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            form.closest('.modal').modal('toggle');
                            Toast.fire({
                                type: 'success',
                                title: '@AN.Core.Resources.Global.Global.Successful',
                                text: result.message
                            });
                            reloadDataTable();
                        } else {
                            Toast.fire({
                                type: 'error',
                                title: '@AN.Core.Resources.Global.Global.Error',
                                text: result.message
                            });
                        }
                    },
                    error: function (jqXHR, ex) {
                        handleAjaxError(jqXHR, ex);
                    }
                }).always(function () {
                    waitingDone('AwroNoreModalDialog');
                });
            }
        });
    });
</script>

