@model AN.Core.ViewModels.MedicalRequestListViewModel

@{
    Layout = "~/Views/Shared/_CpanelLayout.cshtml";
    var dir = AN.Web.Helper.CultureHelper.Lang == AN.Core.Enums.Lang.EN ? AN.Core.Enums.LayoutDir.LTR : AN.Core.Enums.LayoutDir.RTL;
}

@section styles{
    <link rel="stylesheet" href="~/lib/datatables/css/dataTables.bootstrap4.min.css" />
    <link rel="stylesheet" href="~/lib/datatables/css/buttons.dataTables.min.css" />
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/lib/flatpickr/flatpickr.min.css" />
    <link rel="stylesheet" href="~/lib/clockpicker/bootstrap-clockpicker.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-fileinput/css/fileinput.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap4c-custom-switch/dist/css/component-custom-switch.min.css" />
    <link rel="stylesheet" href="~/lib/iCheck/skins/all.css" type="text/css" />
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Medical Requests</h1>
            </div>
        </div>
    </div>
</div>

<section class="content">
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="card card-info card-outline">           
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 table-responsive">
                        <table id="MedicalRequestsTable" class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(m => m.PersonName)</th>
                                    <th>@Html.DisplayNameFor(m => m.PersonPhone)</th>
                                    <th>@Html.DisplayNameFor(m => m.CountryName)</th>
                                    <th>@Html.DisplayNameFor(m => m.RequestDate)</th>
                                    <th>Documents</th>
                                    <th></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.buttons.min.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/flatpickr/flatpickr.min.js"></script>
    <script src="~/lib/clockpicker/bootstrap-clockpicker.min.js"></script>
    <script src="~/lib/jquery.maskedinput/jquery.maskedinput.min.js"></script>
    <script src="~/js/My/DataTablesLocale/dt_@(ViewBag.Lang.ToString()).js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/lib/bootstrap-fileinput/js/fileinput.min.js"></script>
    <script type="text/javascript" src="~/lib/bootstrap-fileinput/themes/fas/theme.min.js"></script>
    <script type="text/javascript" src="~/lib/iCheck/icheck.min.js"></script>
    <script type="text/javascript">
        var table;
        $(function () {
            if ($('#MedicalRequestsTable').length !== 0) {
                table = $('#MedicalRequestsTable').DataTable({
                    language: dataTablesLocale,
                    processing: true,
                    serverSide: true,
                    orderCellsTop: true,
                    autoWidth: true,
                    deferRender: true,
                    lengthMenu: [5, 10, 15, 20],
                    dom: '<"row"<"col-sm-12 col-md-12"B><"col-sm-12 col-md-12 text-right"l>><"row"<"col-sm-12"tr>><"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                    buttons: [

                    ],
                    ajax: {
                        type: "POST",
                        url: '/admin/MedicalRequest/LoadTable/',
                        contentType: "application/json; charset=utf-8",
                        async: true,
                        headers: {
                            "XSRF-TOKEN": document.querySelector('[name="__RequestVerificationToken"]').value
                        },
                        data: function (data) {
                            let additionalValues = [];
                            additionalValues[0] = "Additional Parameters 1";
                            additionalValues[1] = "Additional Parameters 2";
                            data.AdditionalValues = additionalValues;

                            return JSON.stringify(data);
                        }
                    },
                    columns: [
                        {
                            data: "PersonName",
                            name: "co",
                            width: "25%"
                        },
                        {
                            data: null,
                            orderable: false,
                            searchable: false,
                            width: "15%",
                            render: function (data, type, row, meta) {
                                return row.PersonPhoneHtml;
                            }
                        },
                        {
                            data: "CountryName",
                            name: "co",
                            width: "25%"
                        },
                        {
                            data: "RequestDate",
                            name: "co",
                            width: "15%"
                        },
                        {
                            data: null,
                            orderable: false,
                            searchable: false,
                            width: "20%",
                            render: function (data, type, row, meta) {
                                return row.DocumentsHtml;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            searchable: false,
                            render: function (data, type, row, meta) {
                                return row.ActionsHtml;
                            }
                        }
                    ]
                });

                table.columns().every(function (index) {
                    $('#MedicalRequestsTable thead tr:last th:eq(' + index + ') input')
                        .on('keyup',
                            function (e) {
                                if (e.keyCode === 13) {
                                    table.column($(this).parent().index() + ':visible').search(this.value).draw();
                                }
                            });
                });
            }
        });

        function reloadDataTable(initAgain = false) {
            table.ajax.reload(null, initAgain);
        }

        function viewMedicalRequestDetails(id) {
            waiting('body', '@AN.Core.Resources.Global.Global.PleaseWait');
            $.ajax({
                type: 'Get',
                url: "/admin/MedicalRequest/Details?id=" + id,
                success: function (response) {
                    var commonModal = $("#AwroNoreModal");
                    commonModal.find('#AwroNoreModalDialog').addClass("modal-lg modal-xlg");
                    commonModal.find('.modal-title').text('Medical Request Details');
                    commonModal.find('#CommonModalContent').html(response);
                    commonModal.modal({backdrop: 'static', keyboard: false});                },
                error: function (jqXHR, ex) {
                    handleAjaxError(jqXHR, ex);
                }
            }).always(function () {
                waitingDone('body');
            });
        }
    </script>
}