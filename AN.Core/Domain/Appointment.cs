//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AN.Core.Domain
{
    using AN.Core.Data;
    using AN.Core.Enums;
    using NetTopologySuite.Geometries;
    using System;
    using System.Collections.Generic;
    public partial class Appointment : BaseEntity
    {
        public Appointment()
        {
            TreatmentHistories = new HashSet<TreatmentHistory>();
            ShiftCenterMessages = new HashSet<ShiftCenterMessage>();          
            Invoices = new HashSet<Invoice>();          
        }       
       
        public DateTime Book_DateTime { get; set; }
       
        public DateTime Start_DateTime { get; set; }
       
        public DateTime End_DateTime { get; set; }
       
        public AppointmentStatus Status { get; set; }       

        /// <summary>
        /// وضعیت پرداخت هزینه نوبت را نشان می دهد
        /// </summary>
        public PaymentStatus Paymentstatus { get; set; } = PaymentStatus.Free;

        public ReservationChannel ReservationChannel { get; set; } = ReservationChannel.Website;
       
        /// <summary>
        /// این فیلد بیشتر برای زمانی کاربرد دارد که نوبتی لغو می شود
        /// و باید بفهمیم که آیا اطلاع رسانی موفق انجام شده است یا نه؟
        /// </summary>
        public bool IsAnnounced { get; set; } = false;

        public string Description { get; set; }      
       
        public int ServiceSupplyId { get; set; }
       
        public int PersonId { get; set; }

        public int? PatientInsuranceId { get; set; }

        public int ShiftCenterServiceId { get; set; } = 1;  
        
        /// <summary>
        /// Maybe appointment is reserved based on offer schedule
        /// </summary>
        public int? OfferId { get; set; }

        public string UniqueTrackingCode { get; set; }

        public Lang RequestLang { get; set; }

        public Point PersonLocation { get; set; }

        public virtual ServiceSupply ServiceSupply { get; set; }
              
        public virtual Person Person { get; set; }
       
        public virtual PatientInsurance PatientInsurance { get; set; }
       
        public virtual ShiftCenterService ShiftCenterService { get; set; }

        public virtual PaymentInfo PaymentInfo { get; set; }

        public virtual ServiceSupplyRating Rate { get; set; }

        public virtual Offer Offer { get; set; }

        public virtual ICollection<TreatmentHistory> TreatmentHistories { get; set; }
       
        public virtual ICollection<ShiftCenterMessage> ShiftCenterMessages { get; set; }

        public virtual ICollection<Invoice> Invoices { get; set; }
    }
}
